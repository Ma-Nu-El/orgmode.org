#+title: Features | Org mode
#+setupfile: setup.org
#+description: Org: an Emacs Mode for Notes, Planning, and Authoring
#+include: "./resources/preamble.html" export html

#+begin_export html
<style>
  .side-fig img {
    filter: invert(1.4%);
    box-shadow: none;
    max-width: 100%;
  }
  #content {
    max-width: none;
  }
  body {
    padding: 1em 0;
  }
  :root {
    --body-left: 0 !important;
    --body-right: 0 !important;
  }
</style>

<div class="banner slim"> <p id="a-quote"></p> </div>
#+end_export

* Simple Syntax
:PROPERTIES:
:CUSTOM_ID: simple-syntax
:HTML_CONTAINER_CLASS: side-fig
:END:

#+attr_html: :class main-image :alt Example basic Org document showing the key textual elements
[[file:resources/img/features/simple-syntax.svg]]
                                          
** Description

Org mode is routinely used to build and manage complex workflows.  It
does this using an elegantly simple syntax that scales from basic
markup to full LaTeX typesetting and from plain text notes to literate
programs.

Everything you need to get started is demonstrated in the image.

*** More

More on [[file:manual/Markup-for-Rich-Contents.html][the markup syntax]] (manual)

* Working with source code
  :PROPERTIES:
  :CUSTOM_ID: babel
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of Org Babel executing code blocks
[[file:resources/img/features/babel.gif]]

** Description

# Org gives you the ability to combine code (from multiple languages), markup,
# typesetting, and meta-programming all within a single cohesive document.

Org provides functionality far beyond that of other computational
notebooks such as [[https://jupyter.org/][Jupyter]] or
[[https://rmarkdown.rstudio.com/][R Markdown]].

# Program your way.
[[https://orgmode.org/worg/org-contrib/babel/][Org babel]]
transforms the lowly executable source block into a complete
[[https://en.wikipedia.org/wiki/Literate_programming][literate programming]]
environment, allowing you to weave the inputs and outputs of multiple
languages, and runtime environments, across multiple machines into a
single unified system, empowering you to achieve new levels of DRYness
regardless of whether the languages you are working in want you to or not.

Org has support for over [[https://orgmode.org/worg/org-contrib/babel/languages.html][80 languages]].

Or source blocks can return results, generate code, populate tables,
and much more.

# When a source block is executed, its output can be the input for blocks
# in other languages, used as the input to formulas for tables, or even
# be a whole new source block.
# or returned as a macro that can be embedded in free text and automatically updated.

# Free your code

Org makes it trivial to extract source code from an Org file and
generate documentation from the same file. This means that it is
possible to have a single source of truth for implementation and
documentation.

# Org mode makes it possible to write executable documentation.
# It also makes it possible to sync source code into back into an Org file. 
# The whole Ferret compiler is implemented in this way as a single Org file.

# Source code is not trapped in documentation 
*** More

[[file:manual/Working-with-Source-Code.html][Working with source code]] (manual)

List of [[https://orgmode.org/worg/org-contrib/babel/languages.html][supported languages]] (Worg)

* Collapsible Editing
  :PROPERTIES:
  :CUSTOM_ID: editing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of folding and unfolding sections in Org
[[file:resources/img/features/folding.gif]]

** Description

Collapsible sections form the outline of an Org document.  You can
fold and unfold whole trees with single keystroke -- =tab=. Org's
collapsible trees make for quick, graceful navigation and powerful
information hiding that lets you focus on the task at hand without
compromising the ability to get the information you need complete it.

*** More

More on [[file:manual/Document-Structure.html][editing and document structure]] (manual)

* Task Management
  :PROPERTIES:
  :CUSTOM_ID: planning
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Demonstration of planning with org, managing a scheduled todo list
[[file:resources/img/features/planning.gif]]

** Description

Org is an extremely capable task manager, time tracker, and TODO list.

Any section can become a /TODO item/ by adding a keyword such as
=TODO= or =HOLD= to track the state of the task.  You can cycle
through all task states with the keyboard shortcut =S-<left/right>=.

Need add your own set of states? No problem.  Org lets you customize
them to support your workflow.

Org /Agenda/ makes it easy to view tasks from multiple files in one
place.  All you have to do is add one of the TODO keywords.  Org has
built-in support for task priority, deadlines, scheduled tasks, tags,
clocking, and more. /Agenda/ can make use of all of it to organize and
prioritize tasks, seamlessly scaling from a simple TODO list into a
complete project management suite, all with plain text markup.

*** More

More on [[file:manual/TODO-Items.html][TODO items]] (manual)

Handling [[file:manual/Dates-and-Times.html][dates and times]] (manual)

* Tables
  :PROPERTIES:
  :CUSTOM_ID: tables
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Manipulating tables with Org, moving cells/rows and executing formulas
[[file:resources/img/features/tables.gif]]

** Description

Org includes a powerful table editor.

Use =tab= to move between columns, and =return= for rows.
The layout automatically updates as cell contents change.

You can import tables from =.csv= and =.tsv= files, or directly from
the current buffer. You can then export them into any format supported
by Org.

Org tables aren't just static views of data.  They can be used as a
complete /spreadsheet/ system, with formulas, references, and more --
all in plain text.

*** More

The [[file:manual/Built_002din-Table-Editor.html][built-in table editor]] (manual)

Org as a [[file:manual/The-Spreadsheet.html][spreadsheet]] system (manual)

Introduction to [[https://orgmode.org/worg/org-tutorials/tables.html][editing tables]] (Worg)

Using [[https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][Org as a spreadsheet]] (Worg)

* Publishing
  :PROPERTIES:
  :CUSTOM_ID: publishing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Showing an Org file being exported to HTML, markdown, PDF, and plaintext
[[file:resources/img/features/exports.gif]]

** Description

Org provides great capability as an authoring and publishing tool.

Use the intuitive Org markup syntax to create source documents that can exported
into many different formats including:
- HTML
- $\LaTeX$
- ODT
- and much more!

Developers can easily create new backends for their favourite format
(see the [[https://orgmode.org/worg/dev/org-export-reference.html][reference documentation]]).

You can also define /publishing projects/ with one or more =.org= file(s),
and one or more publication backends.

*** More

More on [[file:manual/Markup-for-Rich-Contents.html][markup]] (manual)

More on [[file:manual/Exporting.html][exporting]] (manual)

More on [[file:manual/Publishing.html][publishing]] (manual)

[[https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html][Tutorial on publishing]] to HTML (Worg)

[[https://orgmode.org/worg/org-tutorials/org-latex-export.html][Tutorial on publishing]] to $\LaTeX$ (Worg)

* Extensibility
  :PROPERTIES:
  :CUSTOM_ID: extensibiliy
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Display of some default and custom Org link types
[[file:resources/img/features/links.svg]]

** Description
Org-mode isn't just capable out of the box, it's
spectacularly extensible.

Take links as an example. Updating docs for a
project and find yourself linking to GitHub issues
a lot? You can add a new link type for the
document (or globally) where in
~[[issue:74][version mismatch]]~ the link expands to
=https://github.com/author/repo/issues/74=.

This is just the beginning, you can define
arbitrary functions to resole links, link to files
on remote machines with [[https://www.emacswiki.org/emacs/TrampMode][Tramp]], and more.

In Org-mode, extensibility isn't an afterthought --- it's baked right into the
foundations.

* Time Tracking (Clocking)
  :PROPERTIES:
  :CUSTOM_ID: clocking
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Using Org to keep track of how long various subtasks took
[[file:resources/img/features/clocking.svg]]

** Description

Keep track of the time you spend on your tasks with Org /Clocking/.

Org provides easy keyboard shortcuts to /clock in/ and /clock out/ of tasks.

At end of the day, easily generate reports of how you spent your time.

Clocking in a task is =C-c C-x C-i=.
Clocking out a task is =C-c C-x C-o=.
You can use =I= and =O= from an agenda buffer.

Clocking logs are stored in a drawer.

Org makes it easy to clock in and out and to produce nice reports, which
you can customize as needed.

*** More

More on [[file:manual/Clocking-Work-Time.html][clocking tasks]] (manual)

* Agendas
  :PROPERTIES:
  :CUSTOM_ID: agendas
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt An example Org agenda, displaying various todo keywords, priorities, categorisation, and scheduling
[[file:resources/img/features/agenda.svg]]

** Description

Plan your day, your way, with ease.

With /agenda views/ ---reports generated from a set of tasks--- you can see your
tasks on a daily, weekly, and monthly basis in a /highly/ configurable manner.

Even with large =.org= files and thousands of tasks, it is easy to focus on
what you need to do for each context.

The built-in agenda views display the scheduled and deadline task for the
week, TODO lists and stuck projects.

This is one of the key aspect of Org: you can adapt Org to your workflow
while stabilizing it.

*** More

More on [[file:manual/Agenda-Views.html][agendas views]] (manual)

Tutorial on [[https://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html][agenda commands]] (Worg)

* Capturing
  :PROPERTIES:
  :CUSTOM_ID: capturing
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :class main-image :alt Using Org Capture to record an idea while editing a file
[[file:resources/img/features/capturing.gif]]

** Description

Adding TODO items to your =.org= files is called /capturing/.

You can capture from everywhere, both within Emacs and from other
applications like your web browser, PDF viewer, etc.

Capture templates provide a quick and effective way to save information to look
at later.

*** More

More on [[file:manual/Capture.html][capturing]] (manual)

* With your mobile phone
  :PROPERTIES:
  :CUSTOM_ID: mobile
  :HTML_CONTAINER_CLASS: side-fig
  :END:

#+attr_html: :alt Screenshot of BeOrg :style float:right;box-shadow:none; :width 400px
[[file:resources/img/external/beorg.png]]

** Description

On iOS you have the wonderful [[https://beorgapp.com/][beorg]], which supports many of Org's features, and
can sync over a variety of services.

On Android there is [[http://www.orgzly.com/][orgzly]], which is developed over on [[https://github.com/orgzly/orgzly-android][GitHub]].

*** COMMENT More
